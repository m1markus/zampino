# nginx.conf 
#

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections  1024;
}

http {
    # omit server version in http response header
    server_tokens off;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main  buffer=32k  flush=1s;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # m1m.ch
    #
    server {
        server_name  localhost *.m1m.ch m1m.ch;

        location / {
        #    root   /var/data/m1m/www;
        #    index  index.html;
             proxy_pass http://127.0.0.1:8090;
        }

        # Zampano
        #
        location /z/ {
            proxy_pass http://127.0.0.1:9000/;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }
        location /api/ {
            proxy_pass http://127.0.0.1:9000/api/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
        }
        location /js/ {
            proxy_pass http://127.0.0.1:9000/js/;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        location /css/ {
            proxy_pass http://127.0.0.1:9000/css/;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        location /fonts/ {
            proxy_pass http://127.0.0.1:9000/fonts/;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
    
        listen 443 ssl http2; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/m1m.ch/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/m1m.ch/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

        listen       80;

        if ($https = "") {
            return 301 https://$host$request_uri;
        } # managed by Certbot
    }

    server {
        server_name  chat.immo-quick.ch;

        location / {
            proxy_pass http://127.0.0.1:9000/;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }

        listen 443 ssl http2; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/immo-quick.ch/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/immo-quick.ch/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

        listen       80;

        if ($https = "") {
            return 301 https://$host$request_uri;
        } # managed by Certbot
    }

    # immo-quick.ch
    #
    server {
        server_name  *.immo-quick.ch immo-quick.ch;

        rewrite ^/vcard/mrs$   http://www.immo-quick.ch/vcard_mrs.html   redirect;

        location / {
            root   /var/data/iq/www;
            index  index.html;
   #         index  cdown.html index.html;
        }

        listen 443 ssl http2; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/immo-quick.ch/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/immo-quick.ch/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

        listen       80;

        if ($https = "") {
            return 301 https://$host$request_uri;
        } # managed by Certbot
    }
}
